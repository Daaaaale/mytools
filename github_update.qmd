---
title: "github_update"
format: html
editor: visual
toc: true
---
以下是以 **Quarto** 格式编写的教程文档，指导你将现有代码更新到本地 R 包并推送到 GitHub，同时生成文档：

## 前提条件

1. 本地包 `mytools` 已初始化。
2. RStudio 和 Quarto 已安装。
3. 系统已配置 Git，并连接到 GitHub。

---

## 步骤 1：更新脚本到 R 包目录

在本地包目录 `mytools` 中，执行以下操作：

1. 确保包的目录结构为：

   ```plaintext
   mytools/
   ├── DESCRIPTION
   ├── NAMESPACE
   ├── R/
   │   ├── theme_customization.R
   ├── man/
   ```

2. 将脚本内容保存到 `R/theme_customization.R` 文件中：
   - 打开 `mytools/R/theme_customization.R` 文件（如果文件不存在则创建）。
   - 将代码粘贴并保存。

---

## 步骤 2：编辑 DESCRIPTION 文件(可不做)

打开或创建 `DESCRIPTION` 文件，添加以下内容：

```plaintext
Package: mytools
Type: Package
Title: Tools for Customizing Themes
Version: 0.1.0
Author: Your Name <your.email@example.com>
Maintainer: Your Name <your.email@example.com>
Description: Custom functions for generating modified ggplot2 themes.
License: MIT
Encoding: UTF-8
LazyData: true
Imports:
    ggplot2,
    purrr
RoxygenNote: 7.2.3
```

---

## 步骤 3：生成 NAMESPACE 文件

使用 `roxygen2` 自动生成文件：

1. 在 R 控制台运行以下代码：
   ```r
   library(roxygen2)
   roxygen2::roxygenize("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools")
   ```

---

## 步骤 4：安装本地包

在 R 控制台中运行以下命令：

```r
install.packages("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools", repos = NULL, type = "source")
library(mytools)
```

确认你可以正常加载包，并在代码中调用自定义主题，例如：

```r
library(ggplot2)
library(mytools)

ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  theme_bw_modified
```

---

## 步骤 5：生成文档

1. 确保脚本中函数已添加 `#'` 文档块。示例如下：

   ```r
   #' 修改 ggplot2 的默认主题
   #'
   #' @param base_theme ggplot2 中的基础主题函数
   #' @param base_size 基础字体大小
   #' @param base_line_size 基础线宽
   #' @param base_rect_size 基础矩形大小
   #' @return 修改后的主题
   #' @examples
   #' theme_bw_modified
   generate_modified_theme <- function(base_theme, base_size = 8, ...) {
     # ...
   }
   ```

2. 运行以下命令以生成文档：

   ```r
   roxygen2::roxygenize("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools")
   ```

3. 确保 `man/` 文件夹中出现了 `.Rd` 文件。

---

## 步骤 6：推送到 GitHub

### 将更改推送到 GitHub：

1. 使用 Git 命令行操作（或 GitHub Desktop）将更改提交并推送：
   ```bash
   cd "C:/Users/lycolyca/PersonalDir/R working directory/github/mytools"
   git add .
   git commit -m "Update theme customization script and documentation"
   git push origin main
   ```

2. 在浏览器中访问仓库确认更新。

---

## 常见问题

### 如何检查文档生成是否正确？
运行以下命令查看帮助文档：
```r
?generate_modified_theme
```

### 安装失败怎么办？
检查目录路径是否正确，并确保 R 控制台未占用包文件。

---

完成上述操作后，你的包将在 GitHub 仓库中生效并可供他人使用！🎉
``` 

将上述内容复制到 Quarto 文档中并保存即可使用。如果需要进一步改进，请告诉我！
