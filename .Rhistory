gc()
# 使用 mtcars 数据集
p <- ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point() +
# 使用 cyl 和 gear 变量进行分面，调整条带的位置
facet_grid(rows = vars(cyl), cols = vars(gear)) +
theme_bw() +
theme(
strip.background = element_rect(fill = "lightblue", color = "black"),
strip.text = element_text(face = "bold"),
strip.placement = "intside"
)
library(ggplot2)
# 使用 mtcars 数据集
p <- ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point() +
# 使用 cyl 和 gear 变量进行分面，调整条带的位置
facet_grid(rows = vars(cyl), cols = vars(gear)) +
theme_bw() +
theme(
strip.background = element_rect(fill = "lightblue", color = "black"),
strip.text = element_text(face = "bold"),
strip.placement = "intside"
)
p
# 使用 mtcars 数据集
p <- ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point() +
# 使用 cyl 和 gear 变量进行分面，调整条带的位置
facet_grid(rows = vars(cyl), cols = vars(gear)) +
theme_bw() +
theme(
strip.background = element_rect(fill = "lightblue", color = "black"),
strip.text = element_text(face = "bold"),
strip.placement = "inside"
)
p
# 使用 mtcars 数据集
p <- ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point() +
# 使用 cyl 和 gear 变量进行分面，调整条带的位置
facet_grid(rows = vars(cyl), cols = vars(gear)) +
theme_bw() +
theme(
strip.background = element_rect(fill = "lightblue", color = "black"),
strip.text = element_text(face = "bold"),
strip.placement = "outside"
)
p
?facet_grid()
install.packages("tidyplots")
install.packages(c("abind", "afex", "anytime", "ape", "aplot", "askpass", "bayestestR", "BH", "bindr", "BiocManager", "bit", "bit64", "bitops", "bookdown", "broom", "car", "caTools", "clue", "cols4all", "commonmark", "correlation", "corrplot", "cpp11", "credentials", "curl", "data.table", "datamods", "datawizard", "dendextend", "Deriv", "digest", "doBy", "dotCall64", "e1071", "effectsize", "emmeans", "esquisse", "evaluate", "fastmatch", "fdrtool", "fields", "FNN", "fontawesome", "fs", "future.apply", "gert", "ggfun", "ggrepel", "ggstatsplot", "glue", "gmp", "gower", "gplots", "graphlayouts", "gtable", "harmony", "hexbin", "Hmisc", "httr2", "hunspell", "igraph", "insight", "janitor", "jsonlite", "jtools", "knitr", "Lahman", "later", "lavaan", "lpSolve", "lubridate", "maps", "matrixStats", "microbenchmark", "modelenv", "mvtnorm", "openssl", "openxlsx", "parallelly", "parameters", "patchwork", "performance", "pillar", "pkgbuild", "pkgdown", "PMCMRplus", "profvis", "progressr", "promises", "ps", "psych", "quantreg", "R.oo", "ragg", "RANN", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "reactR", "renv", "reticulate", "rio", "rjson", "rmarkdown", "Rmpfr", "rsconnect", "RSQLite", "rstudioapi", "sandwich", "scatterpie", "seriation", "shiny", "shinyAce", "shinyWidgets", "Signac", "slam", "slider", "spam", "spatstat.data", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.univar", "spatstat.utils", "spelling", "stars", "statsExpressions", "stringdist", "SuppDists", "sys", "testthat", "textshaping", "tidyplots", "timeDate", "tinytex", "toastui", "usethis", "vdiffr", "vegan", "waldo", "withr", "wk", "writexl", "xfun", "yulab.utils"))
library(abind)
detach("package:abind", unload = TRUE)
installed_packages <- installed.packages()
packages_to_export <- installed_packages[, "Package"]
writeLines(packages_to_export, "installed_packages.txt")
rm(list = ls())
library(pheatmap)
library(tidyverse)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ddCt")
a <- ggplot(economics, aes(date, unemploy))
b <- ggplot(seals, aes(x = long, y = lat))
a
library(tidyverse)
a <- ggplot(economics, aes(date, unemploy))
b <- ggplot(seals, aes(x = long, y = lat))
a
b
b + geom_segment(aes(yend = lat + 1, xend = long + 1))
b + geom_spoke(aes(angle = 1:1155, radius = 1))
c <- ggplot(mpg, aes(hwy))
c2 <- ggplot(mpg)
c
c2
d <- ggplot(mpg, aes(fl))
d
c + geom_area(stat = "bin")
data(mpg)
force(mpg)
View(mpg)
setwd("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools")
library(roxygen2)
roxygen2::roxygenize("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools")
install.packages("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools", repos = NULL, type = "source")
library(mytools)
library(ggplot2)
library(mytools)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
theme_bw_modified
roxygen2::roxygenize("C:/Users/lycolyca/PersonalDir/R working directory/github/mytools")
?generate_modified_theme
